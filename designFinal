
Function Name:read_int
Parameters:prompt
Return:An integer value input by the user
1.)Prompt the user to input a number value.
2.)if number.isdigit()
    a.return the number typecasted to an int
3.)otherwise if number does not equal number.isdigit()
    a.ouput "This input  is not valid !"
    b.return zero

Function Name:quarterback_rating
Parameters:none
Return:(100 * ((5*(completions / attempts - 0.3 )+ 0.25*(passingyards / attempts - 3) + 20*(touchdownpasses / attempts)+ 2.375-(25 * interceptions / attempts))) / 6)
Algorithm:
1.)Prompt the user to input a number for completions store it in the variable completions.
2.)call the read_int function to convert  input for completions to an int
3.)Prompt the user to input a number for attempts store it in the variable attempts.
4.)call the read_int function to convert  input for attempts to an int
5.) while attempts <=0:
        a.output"This is an invalid input.You can't have zero or less attempts!"
        b.prompt the user to enter the number of attempts
        c.call the read_int function to convert  input for attempts to an int

6.)Prompt the user to input a number for passing yards store it in the variable passing yards.
7.)call the read_int function to convert  input for passing yards to an int
8.)Prompt the user to input a number for touchdown passes store it in the variable touchdown passes.
9.)call the read_int function to convert  input for touchdown passes to an int
10.)Prompt the user to input a number for interceptions store it in the variable interceptions.
11.)call the read_int function to convert input for interceptions to an int
12.)Perform the calculation:
(100 * ((5*(completions / attempts - 0.3 )+ 0.25*(passingyards / attempts - 3) + 20*(touchdownpasses / attempts)+ 2.375-(25 * interceptions / attempts))) / 6),
store the QB calculation in result
13.)if result is greater than or equal to 158.3:
    a.output"They are a perfect passer!"
14.)otherwise if result  is less than 158.3 and result is greater than or equal to zero:
    a.output"The quarterback rating of this player is ,result,"They are not a perfect passer"
15.)otherwise:
    a.output""The quarterback rating of this player is ,result,"that is an invalid answer you gave bad input!"
16.) return result

Function Name:strength_factor
Parameters:none
Return:(((N / 10 )+ (7* Sr8) + (6*Sr16) + (5*Sr32) + (4 *Sr64) + (3*Jr16) + (2*Sr100)) /(100))
Algorithm:
1.)Prompt the user to input a number for number of fencing participants store in the variable N
2.)call the read_int function to convert  input for fencing participants to an int
3.)Prompt the user to input a number for No. of fencers ranked 1-8 in the World Cup standings.
4.)call the read_int function to convert  input for No. of fencers ranked 1-8 to an int
5.)Prompt the user to input a number for No. of fencers ranked 9-16 in the World Cup standings.
6.)call the read_int function to convert  input for No. of fencers ranked 9-16 to an int
7.)Prompt the user to input a number for No. of fencers ranked 17-32 in the World Cup standings.
8.)call the read_int function to convert  input for No. of fencers ranked 17-32 to an int
9.)Prompt the user to input a number for No. of fencers ranked 33-64 in the World Cup standings.
10.)call the read_int function to convert  input for No. of fencers ranked 33-64to an int
11.)Prompt the user to input a number for No. of fencers ranked  65-100 in the World Cup standings.
12.)call the read_int function to convert  input for No. of fencers ranked 65-100 to an int
13.)Prompt the user to input a number for No. of fencers ranked 1-16 in the Junior World Cup standings.
14.)call the read_int function to convert input for No. of fencers ranked 1-16  to an int
15.)perform the  calculation :
(((N / 10 )+ (7* Sr8) + (6*Sr16) + (5*Sr32) + (4 *Sr64) + (3*Jr16) + (2*Sr100)) /(100)), store answer to calculation in result
16.)output"The strength factor is", result)
17.)while result > 2
    a. output"The strength factor can not be higher than 2!"
    b.call strength_factor()
18.)return result

Function Name:gymnastics_max
Parameters:a,b,c,d,e( representative of each execution score)
Return:The maximum score
Algorithm:
1.)if a is greater than or equal to b and a is greater than or equal to c and a is greater than or equal to d  and a is greater than or equal to e:
    a.)return a
2.)otherwise if b is greater than or equal to a and b is greater than or equal to c and b  is greater than or equal to d  and b is greater than or equal to e:
    a.)return b
3.) otherwise if c is greater than or equal to a and c is greater than or equal to b  and c is greater than or equal to d  and c is greater than or equal to e:
    a.)return c
4.) otherwise if d is greater than or equal to a  and d is greater than or equal to b and d is greater than or equal to c  and d is greater than or equal to e:
    a.) return d
5.) otherwise if  e is greater than or equal to a and e is greater than or equal to b and e is greater than or equal to c  and  e is greater than or equal to d:
    a.)return e



Function Name:gymnastics_min
Parameters:a,b,c,d,e( representative of each execution score)
Return:The minimum score
Algorithm:
1.)if a is less than or equal to b and a is less than or equal to c and a is less than or equal to d  and a is less than or equal to e:
    a.)return a
2.)otherwise if b is less than or equal to a and b is less  than or equal to c and b  is less than or equal to d  and b is less than or equal to e:
    a.)return b
3.) otherwise if c is less than or equal to a and c is less than or equal to b  and c is less than or equal to d  and c is less than or equal to e:
    a.)return c
4.) otherwise if d is less than or equal to a  and d is less  than or equal to b and d is less  than or equal to c  and d is less than or equal to e:
    a.) return d
5.) otherwise if  e is less  than or equal to a and e is less than or equal to b and e is less than or equal to c  and  e is less than or equal to d:
    a.)return e


Function Name:gymnast_calculation
Parameters:none
Return:float(a+b+c+d+e - (max+min))/3+(f)
Algorithm:
1.)Prompt the user to input a number for number of fencing participants
2.)Prompt the user to input a number for No. of fencers ranked 1-8 in the World Cup standings.
3.)Prompt the user to input a number for No. of fencers ranked 9-16 in the World Cup standings.
4.)Prompt the user to input a number for No. of fencers ranked 17-32 in the World Cup standings.
5.)Prompt the user to input a number for No. of fencers ranked 33-64 in the World Cup standings.
6.)Prompt the user to input a number for No. of fencers ranked  65-100 in the World Cup standings.
7.)Prompt the user to input a number for No. of fencers ranked 1-16 in the Junior World Cup standings.
8.)Typecast inputs to floats.
9.)set the variable min equal to the gymnastics_min function to determine the  lowest score(s) to drop from the execution scores
10.)set the variable max equal to the gymnastics_max function to determine the highest score(s) to drop from the execution stores
11.)perform the calaculation  (a+b+c+d+e - (max+min))/3+(f), store calculation in result
12.)output"The final gymnastics score is", result)
13.return result


Function Name:Menu
Parameters:None
Return:chosen menu option
Algorithm:
1.)Tell the user their options for the  sport  that the program will calculate statistics for(football, fencing or gymnastics).
2.)Ask the user to input the  choice of sport statistic they would like to do their calculation for
3.)if choice is football:
    a.)call quarterback_rating()
4.)otherwise  if choice is fencing:
    a.)call strength factor
5.) otherwise if choice is gymnastics:
    a.)gymnastics_calculation()

6.)otherwise:
    a.)output"This is not a valid option"

7.)Return the choice


Function Name: Main
Parameters: None
Return: None
Algorithm:
1.Tell the user the purpose of the program
2.Call menu to determine choice
3.return main function